dora {
  doradilla{
    queue{
      #type = "Fifo"
    }
  }

  blocking-io-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 300
    }
    throughput = 15
  }


  fsmNumber = 1

  akka.actor.debug.receive = on
  akka {

    loggers = [akka.event.slf4j.Slf4jLogger]
    loglevel = debug

    # Log the complete configuration at INFO level when the actor system is started.
    # This is useful when you are uncertain of what configuration is used.
    #log-config-on-start = on

    actor {
      #provider = "akka.cluster.ClusterActorRefProvider"
      debug {
        # enable DEBUG logging of actor lifecycle changes
        lifecycle = off
        # enable DEBUG logging of unhandled messages
        unhandled = off
        # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
        autoreceive = off
        # enable function of LoggingReceive, which is to log any received message at
        # DEBUG level
        receive = on
        # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
        fsm = off
      }
    }

#    remote {
#      log-remote-lifecycle-events = on
#      netty.tcp {
#        hostname = ${?dora.cluster-setting.hostname}
#        port =   ${?dora.cluster-setting.port}
#      }
#      #https://doc.akka.io/docs/akka/current/project/migration-guide-2.5.x-2.6.x.html
#      artery.canonical{
#        hostname = ${?dora.cluster-setting.hostname}
#        port =   ${?dora.cluster-setting.port}
#      }
#    }
#    cluster {
#      seed-nodes = [
#        "akka://"${dora.cluster-setting.cluster-name}"@"${dora.cluster-setting.hostname}":"${dora.cluster-setting.port}
#      ]
#      auto-down-unreachable-after = 10s
#    }
#   cluster.jmx.multi-mbeans-in-same-jvm = on
  }
}





